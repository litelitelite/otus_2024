---
- name: Install pcs
  hosts: all
  become: true
  gather_facts: true
  vars:
    new_password: $1$SomeSalt$IqiRgqcqumNFgOCk7BG7I.
    node_1: node1
    node_2: node2
    node_3: node3
  tasks:
  
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      with_items:
        - pcs
        - pacemaker
        - fence-agents

    - name: Set password for pacemaker on all nodes
      ansible.builtin.user:
        name: hacluster
        password: "{{ new_password }}"
    
    - name: Destroy default
      ansible.builtin.command: pcs cluster destroy

    - name: Enable and start pcsd.service
      ansible.builtin.systemd:
        state: started
        enabled: true
        name: pcsd

    - name: Add localhost entry node1
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: '^127.0.0.1\s+localhost$'
        line: '127.0.0.1 localhost node1'
      when: ansible_host == "{{ groups['gfs2-master'][0] }}"

    - name: Add localhost entry node2
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: '^127.0.0.1\s+localhost$'
        line: '127.0.0.1 localhost node2'
      when: ansible_host == "{{ groups['gfs2'][0] }}"
    
    - name: Add localhost entry node3
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: '^127.0.0.1\s+localhost$'
        line: '127.0.0.1 localhost node3'
      when: ansible_host == "{{ groups['gfs2'][1] }}"

    - name: Append additional host entries to /etc/hosts file
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
        state: present
      with_items:
        - "{{ groups['gfs2-master'][0] }} node1"
        - "{{ groups['gfs2'][0] }} node2"
        - "{{ groups['gfs2'][1] }} node3"

- name: Setup cluster 
  hosts: gfs2-master
  become: true
  gather_facts: true
  tasks:

    # - name: Auth cluster
    #   ansible.builtin.command: pcs cluster auth -u hacluster -p ChangeIt

    - name: Auth cluster nodes
      ansible.builtin.command: pcs host auth -u hacluster -p ChangeIt node1 node2 node3 #"{{ groups['gfs2'][0] }}" "{{ groups['gfs2'][1] }}" "{{ groups['gfs2'][2] }}"

    - name: Setup cluster
      ansible.builtin.command: 
        pcs cluster setup --start otus_learning \
          node1 addr="{{ groups['gfs2-master'][0] }}" node2 addr="{{ groups['gfs2'][0] }}" node3 addr="{{ groups['gfs2'][1] }}"

    - name: Enable cluster
      ansible.builtin.command: pcs cluster enable --all

    - name: Get cluster status
      ansible.builtin.command: pcs cluster status
      register: pcs_status

    - name: Debug cluster status
      ansible.builtin.debug:
        var: pcs_status

- name: Configure fence
  hosts: gfs2
  become: true
  gather_facts: true
  tasks:

      - name: Create stonith
        ansible.builtin.command:
          pcs stonith create myapc fence_apc_snmp \
            ipaddr="zapc.example.com" pcmk_host_map=""{{ groups['gfs2-master'][0] }}:1";"{{ groups['gfs2'][0] }}:2";"{{ groups['gfs2'][1] }}:3"" \
            pcmk_host_check="static-list" pcmk_host_list="{{ groups['gfs2-master'][0] }}","{{ groups['gfs2'][0] }}","{{ groups['gfs2'][1] }}" \
            login="apc" passwd="apc"

      - name: Get stonith status
        ansible.builtin.command: pcs stonith show myapc
        register: stonith_status

      - name: Debug cluster status
        ansible.builtin.debug:
          var: stonith_status