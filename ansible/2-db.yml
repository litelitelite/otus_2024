- name: Install PGSQL
  hosts: db
  become: true
  gather_facts: true
  tasks:

    - name: Install required packages
      ansible.builtin.yum:
        name:
        - pip
        - libpq-devel
        - python3-devel
        update_cache: yes

    - name: Install PostgreSQL
      ansible.builtin.yum:
        name: 
          - postgresql-server
          ### https://github.com/georchestra/ansible/issues/55#issuecomment-588313638
          - acl
          - gcc 
        state: present
        update_cache: yes
    
    - name: Install pip required packages
      ansible.builtin.pip:
        name:
          - wheel
          - psycopg2
      
    - name: InitDB
      ansible.builtin.command: /usr/bin/postgresql-setup --initdb

    - name: Upd global config
      ansible.builtin.lineinfile:
        dest: /var/lib/pgsql/data/postgresql.conf
        regexp: "^#?unix_socket_directories.+$"
        line: "unix_socket_directories = '/var/run/postgresql'"
        state: "{{ item.state | default('present') }}"

    - name: Upd global config with listen address
      ansible.builtin.lineinfile:
        dest: /var/lib/pgsql/data/postgresql.conf
        regexp: "^#?listen_addresses.+$"
        line: "listen_addresses = '*'"
        state: "{{ item.state | default('present') }}"

    - name: Restart PostgreSQL service
      ansible.builtin.systemd:
        name: postgresql
        state: restarted
        enabled: true

    - name: Update pg_hba.conf to use "md5" authentication
      community.general.postgresql_pg_hba:
        dest: //var/lib/pgsql/data/pg_hba.conf
        contype: "{{ item.type }}"
        databases: "{{ item.database | default('all') }}"
        users: "{{ item.user | default('all') }}"
        address: "{{ item.address | default('all') }}"
        method: "{{ item.auth_method | default('md5')}}"
        state: "{{ item.state | default('present') }}"
      with_items: 
        - {type: local, database: all, user: postgres, auth_method: peer}
        - {type: local, database: all, user: all, auth_method: peer}
        - {type: host, database: all, user: all, address: '0.0.0.0/0', auth_method: md5}
        - {type: host, database: all, user: all, address: '::1/128', auth_method: md5}

    - name: Ensure PGSQL unix socket dirs exist
      ansible.builtin.file:
        path: /var/run/postgresql
        state: directory
        owner: postgres
        group: postgres
        mode: 02775

    - name: Restart PostgreSQL service
      ansible.builtin.systemd:
        name: postgresql
        state: restarted
        
    - name: Create database user
      become_user: postgres
      become: true
      vars:
        ansbile_ssh_pipelining: true
      community.postgresql.postgresql_user:
        name: admin
        password: qwerty123
        login_host: localhost
        login_user: postgres
        login_password: postgres
        login_unix_socket: /var/run/postgresql
        state: present

    - name: Create database
      become_user: postgres
      become: true
      vars:
        ansbile_ssh_pipelining: true
      community.postgresql.postgresql_db:
        name: flask_app
        state: present

    - name: Restart PostgreSQL service
      ansible.builtin.systemd:
        name: postgresql
        state: restarted