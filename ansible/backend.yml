- name: Install python flask backend
  hosts: app
  become: true
  gather_facts: true
  tasks:
  
    - name: Set a hostname
      ansible.builtin.hostname:
        name: backend1
      when: ansible_host == "{{ groups['app'][0] }}"

    - name: Set a hostname
      ansible.builtin.hostname:
        name: backend2
      when: ansible_host == "{{ groups['app'][1] }}"

    - name: Append additional host entries to /etc/hosts file
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
        state: present
      with_items:
        - "10.0.1.3 nginx1 consul-nginx1"
        - "10.0.1.4 nginx2 consul-nginx1"
        - "10.0.1.5 backend1"
        - "10.0.1.6 backend2"
        - "10.0.1.7 pgdb1 consul1"
        - "10.0.1.8 pgdb2 consul2"
        - "10.0.1.9 pgdb3 consul3"

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      with_items:
        - python3
        - python3-pip
        - python3-mysqldb
        - libpq-dev
        - haproxy
      
    - name: Install pip required packages
      ansible.builtin.pip:
        name:
          - flask
          - Flask-SQLAlchemy
          - psycopg2

    - name: Copy haproxy cfg
      ansible.builtin.template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg

    - name: Copy application files
      ansible.builtin.template:
        src: app.j2
        dest: app.py
        owner: ubuntu
        group: ubuntu
        mode: 0755

    - name: Copy systemd service file
      ansible.builtin.copy:
        src: flask_app.service
        dest: /etc/systemd/system/flask_app.service

    - name: Enable and start the services
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: yes
        state: restarted
      with_items:
        - haproxy
        - flask_app.service

    - name: Install nginx
      ansible.builtin.apt:
        name: nginx
        state: present
        
    - name: Create nginx configuration file for static content
      ansible.builtin.template:
        src: nginx_static.conf.j2
        dest: /etc/nginx/sites-available/static
        owner: root
        group: root
        mode: '0644'
        
    - name: Create symlink to sites-enabled
      ansible.builtin.file:
        src: /etc/nginx/sites-available/static
        dest: /etc/nginx/sites-enabled/static
        state: link
        
    - name: Remove default configuration from sites-enabled
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent
    
    - name: Add static page
      ansible.builtin.copy:
        src: index.html
        dest: /var/www/html/

    - name: Restart nginx service
      ansible.builtin.service:
        name: nginx
        state: restarted
