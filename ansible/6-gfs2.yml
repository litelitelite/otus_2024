---
- name: Install GFS2
  hosts: backend
  become: true
  gather_facts: true
  tasks:

    - name: Enable the High Availability repository
      community.general.dnf_config_manager:
        name: resilientstorage
        state: enabled

    - name: Install lvm and gfs2
      ansible.builtin.dnf:
        name: 
          - gfs2-utils 
          - lvm2-lockd
          - dlm
        update_cache: yes
        state: present

    - name: Update use_lvmlockd setting in lvm.conf
      ansible.builtin.lineinfile:
        path: /etc/lvm/lvm.conf
        regexp: 'use_lvmlockd = 0'
        line: 'use_lvmlockd = 1'
        state: present

- name: Setup cluster
  hosts: "{{ groups['backend'][0] }}"
  become: true
  gather_facts: true
  tasks:

    - name: Setup cluster
      ansible.builtin.command: "{{ item }}"
      with_items:
        - pcs property set stonith-enabled=false
        - pcs property set no-quorum-policy=freeze
        - pcs resource create dlm --group locking systemd:dlm op monitor interval=30s on-fail=ignore
        - pcs resource clone locking interleave=true
        - pcs resource create lvmlockd --group locking ocf:heartbeat:lvmlockd op monitor interval=30s on-fail=ignore
    
    - name: Pause for 30 sec
      ansible.builtin.pause:
        seconds: 30

    - name: Create PV
      ansible.builtin.command: pvcreate /dev/sda

    - name: Pause for 10 sec
      ansible.builtin.pause:
        seconds: 10

    - name: Create VG
      ansible.builtin.command: vgcreate --shared shared_vg1 /dev/sda --locktype dlm

    - name: Pause for 5 sec
      ansible.builtin.pause:
        seconds: 5

- name: Start locking on node1
  hosts: "{{ groups['backend'][0] }}"
  become: true
  gather_facts: true
  tasks:
    - name: Start lock manager
      ansible.builtin.command: vgchange --lockstart shared_vg1

    - name: Pause for 10 sec
      ansible.builtin.pause:
        seconds: 10

- name: Start locking on node2
  hosts: "{{ groups['backend'][1] }}"
  become: true
  gather_facts: true
  tasks:
    - name: Start lock manager
      ansible.builtin.command: vgchange --lockstart shared_vg1

    - name: Pause for 10 sec
      ansible.builtin.pause:
        seconds: 10
    
- name: Setup FS
  hosts: "{{ groups['backend'][0] }}"
  become: true
  gather_facts: true
  tasks:

    - name: Creating shared lv and configure shared lv and shared fs resources
      ansible.builtin.command: "{{ item }}"
      with_items: 
        - lvcreate --activate sy -L9G -n shared_lv1 shared_vg1
        - echo 'yes' | mkfs.gfs2 -j3 -p lock_dlm -t otus_learning:gfs2 /dev/shared_vg1/shared_lv1

    - name: Pause for 10 sec
      ansible.builtin.pause:
        seconds: 10

    - name: Creating shared lv and configure shared lv and shared fs resources
      ansible.builtin.command: pcs resource create sharedlv1 --group shared_vg1 ocf:heartbeat:LVM-activate lvname=shared_lv1 vgname=shared_vg1 activation_mode=shared vg_access_mode=lvmlockd
      
    - name: Pause for 30 sec
      ansible.builtin.pause:
        seconds: 30

    - name: Creating shared lv and configure shared lv and shared fs resources
      ansible.builtin.command: "{{ item }}"
      with_items: 
        - pcs resource clone shared_vg1 interleave=true
        - pcs constraint order start locking-clone then shared_vg1-clone

    - name: Pause for 30 sec
      ansible.builtin.pause:
        seconds: 30

    - name: Creating shared lv and configure shared lv and shared fs resources
      ansible.builtin.command: pcs constraint colocation add shared_vg1-clone with locking-clone
    
    - name: Output lvs
      ansible.builtin.command: lvs
      register: lvs_out

    - name: Debug lvs
      ansible.builtin.debug:
        var: lvs_out
    
    - name: Create sharedfs resource
      ansible.builtin.command: pcs resource create sharedfs1 --group shared_vg1 ocf:heartbeat:Filesystem device="/dev/shared_vg1/shared_lv1" directory="/mnt/www/html" fstype="gfs2" options=noatime op monitor interval=10s on-fail=ignore
    
    - name: Pause for 30 sec
      ansible.builtin.pause:
        seconds: 30
    
    - name: Check FS 
      ansible.builtin.command: df -h
      register: df_out

    - name: Debug df -h
      ansible.builtin.debug:
        var: df_out.stdout_lines
        
