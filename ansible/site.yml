---
- name: cluster prepare
  hosts: pve1,pve2
  become: true
  tags:
    - all

  tasks:
    - name: Add hosts
      ansible.builtin.copy:
        dest: "/etc/hosts"
        content: |
          127.0.0.1       localhost
          127.0.1.1       debian-11.7-amd64       debian-11
          192.168.56.101 pve1
          192.168.56.102 pve2
          192.168.56.103 pve-nfs

    - name: "Add custom repo"
      ansible.builtin.copy:
        dest: /etc/apt/sources.list.d/pve-install-repo.list
        content: |
          deb [arch=amd64] http://download.proxmox.com/debian/pve bullseye pve-no-subscription

    - name: Download gpg with check
      ansible.builtin.get_url:
        url: https://enterprise.proxmox.com/debian/proxmox-release-bullseye.gpg
        dest: /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpg

    - name: "update"
      block:
        - name: "Update all"
          ansible.builtin.apt:
            upgrade: yes
            update_cache: yes
            force_apt_get: yes
          register: update_result
          until: update_result is succeeded
          retries: 2  # Number of retries including the first attempt
          delay: 10  # Delay in seconds between retries

      rescue:
        - name: "Rebooting the node because the update failed"
          ansible.builtin.reboot:
            connect_timeout: 5
            reboot_timeout: 300
            pre_reboot_delay: 0
          when: update_result.failed

        - name: "patch deb conf"
          ansible.builtin.shell: |
            debconf-set-selections <<< "grub-pc grub-pc/install_devices multiselect /dev/sda"
          args:
            executable: /bin/bash
          

        - name: "Retry Update all packages after reboot"
          ansible.builtin.apt:
            upgrade: yes
            update_cache: yes
            force_apt_get: yes

        

    - name: "Install custom kernel"
      ansible.builtin.apt:
        name: pve-kernel-5.15
        state: present
        update_cache: yes

#    - name: Check if reboot required
#      stat:
#        path: /var/run/reboot-required
#      register: reboot_required_file

    - name: Reboot the Debian or Ubuntu server
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible due to kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
#      when: reboot_required_file.stat.exists

    - name: Preconfigure postfix
      ansible.builtin.shell: |
        debconf-set-selections <<< "postfix postfix/mailname string $(hostname)";debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"
      args:
        executable: /bin/bash

    - name: "Install postfix,proxmox,iscsi"
      ansible.builtin.apt:
        name:
         - postfix
         - proxmox-ve
         - open-iscsi
        state: present
        update_cache: yes


    - name: "Deinstall old kernel"
      ansible.builtin.apt:
        name: 
         - linux-image-amd64
         - linux-image-5.10*
        state: absent

    - name: Change root password
      ansible.builtin.user:
        name: root
        update_password: always
        password: "{{ 'compaq'|password_hash('sha512') }}"

    - name: Install ceph
      ansible.builtin.shell:
        echo y | pveceph install

    - name: Restart NTP client
      ansible.builtin.service:
        name: systemd-timesyncd.service
        state: restarted

- name: cluster prepare
  hosts: pve-nfs
  become: true
  tags:
    - all

  tasks:
    - name: Install NFS packages
      ansible.builtin.apt:
        name: nfs-kernel-server
        state: present

    - name: Create NFS Share directory
      ansible.builtin.file:
        path: /nfs_share
        state: directory
        mode: '0755'

    - name: Create ext4 file system on /dev/sdb
      ansible.builtin.command: mkfs.ext4 /dev/sdb

    - name: Mount disk /dev/sdb to NFS Share directory
      ansible.builtin.mount:
        path: /nfs_share
        src: /dev/sdb
        fstype: ext4
        state: mounted

    - name: Configure NFS Exports
      ansible.builtin.lineinfile:
        path: /etc/exports
        line: "/nfs_share *(rw,sync,no_subtree_check,no_root_squash)"
        state: present

    - name: Restart NFS Server
      ansible.builtin.service:
        name: nfs-kernel-server
        state: restarted
