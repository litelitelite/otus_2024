- name: Install PGSQL Cluster
  hosts: db
  become: true
  gather_facts: true
  vars_files: vars/main.yml
  tasks:

    - name: Set a hostname
      ansible.builtin.hostname:
        name: pgdb1
      when: ansible_host == "{{ groups['db'][0] }}"

    - name: Set a hostname
      ansible.builtin.hostname:
        name: pgdb2
      when: ansible_host == "{{ groups['db'][1] }}"

    - name: Set a hostname
      ansible.builtin.hostname:
        name: pgdb3
      when: ansible_host == "{{ groups['db'][2] }}"

    - name: Append additional host entries to /etc/hosts file
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
        state: present
      with_items:
        - "10.0.1.5 backend1"
        - "10.0.1.6 backend2"
        - "10.0.1.7 pgdb1"
        - "10.0.1.8 pgdb2"
        - "10.0.1.9 pgdb3"
   
    - name: "Install required packages"
      ansible.builtin.apt:
        name: 
          - python3
          - python3-dev
          - python3-pip
          - gcc
          - libpq-dev
        update_cache: yes

    - name: "Install required packages through pip"
      ansible.builtin.pip:
        name: 
          - testresources
          - setuptools
          - psycopg2
    
    - name: "Install required packages"
      ansible.builtin.apt:
        name: 
          - postgresql
          ### https://github.com/georchestra/ansible/issues/55#issuecomment-588313638
          - acl 
          - python3-etcd
          - patroni
          - etcd
          # - patroni-etcd
          - watchdog
        update_cache: yes

    - name: Stop PostgreSQL service
      ansible.builtin.systemd:
        name: postgresql
        state: stopped
        enabled: false
        
    - name: Copy etcd config
      ansible.builtin.template:
        src: etcd.conf.j2
        dest: /etc/default/etcd
    
    - name: "Restart etcd"
      ansible.builtin.service:
        name: etcd
        state: restarted
        enabled: true
    
    - name: "Make dirs for patroni"
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: postgres
        group: postgres
        recurse: yes
        mode: 0750
      become: yes
      with_items:
        - /etc/patroni
        - /etc/patroni/cluster

    - name: "Chown to dir"
      ansible.builtin.file:
        path: /etc/patroni

    - name: Copy patroni config
      ansible.builtin.template:
        src: patroni.conf.j2
        dest: /etc/patroni/config.yml

    - name: "Start patroni on first node"
      ansible.builtin.service:
        name: patroni
        state: started
        enabled: true
      when: ansible_host == "{{ groups['db'][0] }}"
    
    - name: Pause
      ansible.builtin.pause:
        seconds: 20
        
    - name: Create database user
      become_user: postgres
      become: true
      vars:
        ansbile_ssh_pipelining: true
      community.postgresql.postgresql_user:
        name: admin
        password: qwerty123
        login_host: localhost
        login_user: postgres
        login_password: postgres
        login_unix_socket: /var/run/postgresql
        state: present
      when: ansible_host == "{{ groups['db'][0] }}"

    - name: Create database
      become_user: postgres
      become: true
      vars:
        ansbile_ssh_pipelining: true
      community.postgresql.postgresql_db:
        name: flask_app
        state: present
      when: ansible_host == "{{ groups['db'][0] }}"

    - name: "Start patroni on all nodes"
      ansible.builtin.service:
        name: patroni
        state: restarted
        enabled: true
      when: ansible_host != "{{ groups['db'][0] }}"


